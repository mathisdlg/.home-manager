# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }: {
	imports = [
		(modulesPath + "/installer/scan/not-detected.nix")
	];

	boot = {
		initrd = {
			availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
			luks.devices."luks-77d6ba04-d5fb-4612-b088-34a836863f50".device = "/dev/disk/by-uuid/77d6ba04-d5fb-4612-b088-34a836863f50";
			kernelModules = [ ];
		};
		kernelModules = [ "kvm-amd" ];
			kernelParams = [
				"video=DP-3:1920x1080@60"
				"video=HDMI-A-1:1024x600@60"
			];
		extraModulePackages = [ ];
	};

	fileSystems = {
		"/" =
		{
			device = "/dev/disk/by-uuid/b6e8a893-96af-4ebf-8b5a-70a1d42ad259";
			fsType = "ext4";
		};

		"/boot/efi" = {
			device = "/dev/disk/by-uuid/040D-2540";
			fsType = "vfat";
			# options = [ "fmask=0077" "dmask=0077" ];
		};
	};

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp11s0f4u1.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware = {
		cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
		graphics.extraPackages = with pkgs; [
			rocmPackages.clr.icd
			amdvlk
		];
	};
}
